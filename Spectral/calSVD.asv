function trajInfo = calSVD(featExp, energyRate)
%
% Compute Singular Value Decomposition for trajectory*feature matrix.
% Keep the 'energyRate' percent(default=100%) energy of the original matrix.
%

% singular value decomposition
[u,singular,v] = svd(featExp);
trajInfo.u = u;
trajInfo.singular = singular;
trajInfo.v = v;

if nargin >= 2 && (energyRate > 0 && energyRate < 1)
    % get index of singular value
    trajInfo.featExp = u(:,1:k)*s(1:k,1:k)*v(:,1:k)';
else
    trajInfo.featExp = featExp;
end

end %end_of_calSVD

function index = keepLarge
    % keep the energyRate percet energy
    index = 1;
    threshold = sum(sum(singular))*energyRate;
    tmpSum = 0;
    while 1
        tmpSum = tmpSum + sum(singular(index,:));
        if tmpSum >= threshold
            break;
        else
            index = index+1;
        end
    end
end